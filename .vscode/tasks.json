{
  "tasks": [
    {
      "type": "npm",
      "script": "install",
      "path": "vite-gaudi",
      "problemMatcher": [],
      "label": "npm: install - vite-gaudi",
      "detail": "install dependencies from package"
    },
    {
      "type": "npm",
      "script": "install",
      "path": "rsbuild-frank",
      "problemMatcher": [],
      "label": "npm: install - rsbuild-frank",
      "detail": "install dependencies from package"
    },
    {
      "label": "npm: install all",
      "dependsOn": [
        "npm: install - rsbuild-frank",
        "npm: install - vite-gaudi"
      ],
      "isBackground": true,
      "problemMatcher": []
    },
    {
      "label": "npm: dev - vite-gaudi",
      "type": "shell",
      "hide": false,
      "command": "npm run dev",
      "options": {
        "cwd": "./vite-gaudi"
      },
      "presentation": {
        "reveal": "always"
      },
      "isBackground": true,
      "problemMatcher": {
        "owner": "typescript",
        "pattern": "$tsc",
        "fileLocation": [
          "relative",
          "${workspaceFolder}"
        ],
        "background": {
          "activeOnStart": true,
          "beginsPattern": ".*",
          "endsPattern": ".*VITE v.*"
        }
      }
    },
    {
      "label": "npm: dev - rsbuild-frank",
      "type": "shell",
      "hide": false,
      "command": "npm run dev",
      "options": {
        "cwd": "./rsbuild-frank"
      },
      "presentation": {
        "reveal": "always"
      },
      "isBackground": true,
      "problemMatcher": {
        "owner": "typescript",
        "pattern": "$tsc",
        "fileLocation": [
          "relative",
          "${workspaceFolder}"
        ],
        "background": {
          "activeOnStart": true,
          "beginsPattern": ".*",
          "endsPattern": ".*Rsbuild v.*"
        }
      }
    },
    {
      "label": "all:dev",
      "dependsOn": [
        "npm: dev - rsbuild-frank",
        "npm: dev - vite-gaudi"
      ],
      "presentation": {
        "reveal": "always",
        "revealProblems": "never",
        "panel": "new"
      }
    },
    {
      "label": "Terminate All Tasks",
      "command": "echo ${input:terminate}",
      "type": "shell",
      "problemMatcher": []
    }
  ],
  "inputs": [
    {
      "id": "terminate",
      "type": "command",
      "command": "workbench.action.tasks.terminate",
      "args": "terminateAll"
    }
  ]
}